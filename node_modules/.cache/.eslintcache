[{"/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/index.js":"1","/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/Square.jsx":"2","/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/Board.jsx":"3","/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/reducers/reducers.js":"4","/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/reducers/gameReducer.js":"5"},{"size":379,"mtime":1635922012686,"results":"6","hashOfConfig":"7"},{"size":640,"mtime":1635976128191,"results":"8","hashOfConfig":"7"},{"size":738,"mtime":1635976100758,"results":"9","hashOfConfig":"7"},{"size":141,"mtime":1635933153607,"results":"10","hashOfConfig":"7"},{"size":513,"mtime":1635976058381,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jndpvw",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/index.js",[],"/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/Square.jsx",[],"/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/Board.jsx",["23"],"import \"./style/Board.css\";\nimport React, { useState } from \"react\";\nimport { Square } from \"./Square\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Board() {\n    const boardStateWhole = useSelector((state) => state.game);\n    const boardState =  boardStateWhole[0];\n    const countState = boardStateWhole[1]; \n    const boardComponent = [];\n\n    for (let i = 0; i < boardState.length; i++) {\n        let row = boardState[i];\n        for (let j = 0; j < row.length; j++) {\n            boardComponent.push(<Square symbol={boardState[i][j]} x={i} y={j}/>);\n        }\n    }\n\n    return (\n        <div>\n            <h1>Count: {countState}</h1>\n            <div id=\"board\">{boardComponent}</div>\n        </div>\n    );\n}\n","/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/reducers/reducers.js",[],"/Users/michelle_ma/Desktop/NEU/Web/MA/qianlin_ma_assignment5/src/reducers/gameReducer.js",[],{"ruleId":"24","severity":1,"message":"25","line":2,"column":17,"nodeType":"26","messageId":"27","endLine":2,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]